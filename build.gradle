plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.10.0'
    id 'io.freefair.lombok' version '6.0.0-m2'
}

repositories {
    mavenCentral()
}

def allureVersion = "2.23.0",
    selenideVersion = "6.5.0",
    junitVersion = "5.9.2",
    aspectjweaverVersion = "1.9.6",
    javafakerVersion = "1.0.2",
    restAssuredVersion = "5.3.0",
    ownerVersion = "1.0.12",
    assertjCoreVersion = "3.24.0",
    slf4jSimpleVersion = "2.0.7"

allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}

dependencies {
    testImplementation(
            "org.aspectj:aspectjweaver:$aspectjweaverVersion",
            "com.github.javafaker:javafaker:$javafakerVersion",
            "com.codeborne:selenide:$selenideVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "io.rest-assured:rest-assured:$restAssuredVersion",
            "io.qameta.allure:allure-rest-assured:$allureVersion",
            "org.aeonbits.owner:owner:$ownerVersion",
            "org.assertj:assertj-core:$assertjCoreVersion",
            "org.slf4j:slf4j-simple:$slf4jSimpleVersion",
            "org.junit.jupiter:junit-jupiter:$junitVersion")
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
task regress_test(type: Test) {
    useJUnitPlatform {
        includeTags( "Regress")
    }
}

task web_test(type: Test) {
    useJUnitPlatform {
        includeTags( "WEB")
    }
}

task api_test(type: Test) {
    useJUnitPlatform {
        includeTags( "API")
    }
}

    tasks.withType(Test) {
        systemProperties(System.getProperties())
        useJUnitPlatform()

        testLogging {
            lifecycle {
                events "started", "skipped", "failed", "standard_error", "standard_out"
                exceptionFormat "short"
            }
        }


}

